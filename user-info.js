class UserInfo {
  constructor(textName, textJob) {
    this.textName = textName;
    this.textJob = textJob;
    this.name = '';
    this.job = '';
  }

  setUserInfo = (setName, setJob) => {
    this.name = setName;
    this.job = setJob;
  }

  updateUserInfo = () => {
    this.textJob.textContent = this.job;
    this.textName.textContent = this.name;
  }

  getUserInfo = () => {
    return {
      name: this.name,
      job: this.job,
    };
  }

}


// + Надо исправить -- не исправлено

// Данные сейчас в классе не хранятся вы их храните вне класса -- в DOM
// Инпуты к этому классу отношения не имеют тоже
// Прочитайте задание из брифа
//  setUserInfo -- устанавливает новые данные пользователя -- их туда в виде строк как аргументы передать надо
// надо завести переменные для хранения этих данных. Еще раз перечитайте прошлую рекомендацию:


// Класс должен на вход в конструктор получить элементы страницы, куда он будет подставлять актуальные данные
// подьзователя (инпуты к ним не относятся).
// Заведите метод setUserInfo который принимает строки с именем и профессией и сохраняет их внутри класса
// Заведите метод updateUserInfo для обновления данных юзера на странице
// Заведите метод getUserInfo -- он должен вернуть объект с текущими данными пользователя
// Обратите внимание, мы не храним данные в DOM, мы их туда просто подставляем.
// Лучше сразу созать экземпляр класса, вызвать метод установки данных, и метод отрисовки
// Не забудьте убрать заранее прописанные данные юзера в HTML
// Эта организация будет очень удобна на следующем спринте
